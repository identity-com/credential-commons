"use strict";var Bottle=require("bottlejs"),_require=require("./DefaultAnchorServiceImpl"),CurrentCivicAnchor=_require.CurrentCivicAnchor,logger=require("../logger"),HttpServiceConstructor=require("./httpService"),config=require("./config"),SecureRandom=require("../SecureRandom"),MiniCryptoManagerImpl=require("./MiniCryptoManagerImpl"),services=new Bottle,initServices=function(a,b,c,d){return b&&(services.resetProviders(["Http"]),logger.debug("Registering custom HTTP service implementation"),services.factory("Http",function(){return b})),a&&(services.resetProviders(["Config"]),logger.debug("Registering custom Config service implementation"),services.factory("Config",function(){return a})),c&&(services.resetProviders(["SecureRandom"]),logger.debug("Registering custom SecureRandom service implementation"),services.factory("SecureRandom",function(){return c})),d&&(services.resetProviders(["CryptoManager"]),logger.debug("Registering custom CryptoManager service implementation"),services.factory("CryptoManager",function(){return d})),services};services.factory("Config",function(){return config}),logger.info("Registering request-promise-native as Http service implementation."),services.service("Http",HttpServiceConstructor),services.factory("SecureRandom",function(){return new SecureRandom}),services.service("AnchorService",CurrentCivicAnchor,"Config","Http"),services.service("CryptoManager",MiniCryptoManagerImpl),module.exports={services:services,initServices:initServices};