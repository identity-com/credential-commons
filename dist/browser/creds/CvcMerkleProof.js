"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck")),_createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass")),_=require("lodash"),MerkleTools=require("merkle-tools"),_require=require("../lib/crypto"),sha256=_require.sha256,_require2=require("../claim/Claim"),Claim=_require2.Claim,_require3=require("../services"),services=_require3.services,CvcMerkleProof=function(){function a(b){var c=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null;(0,_classCallCheck2.default)(this,a);var d=a.padTree(b);this.type="CvcMerkleProof2018",this.merkleRoot=null,this.anchor="TBD (Civic Blockchain Attestation)",this.leaves=a.getAllAttestableValue(d),this.buildMerkleTree(c),this.granted=null}return(0,_createClass2.default)(a,[{key:"buildMerkleTree",value:function(){var a=this,b=0<arguments.length&&void 0!==arguments[0]?arguments[0]:null,c=new MerkleTools,d=_.map(this.leaves,function(a){return sha256(a.value)});c.addLeaves(d),c.makeTree(),_.forEach(d,function(b,d){a.leaves[d].targetHash=b,a.leaves[d].node=c.getProof(d)}),this.leaves=_.filter(this.leaves,function(a){return"cvc:Random:node"!==a.identifier}),this.merkleRoot=c.getMerkleRoot().toString("hex"),b&&(this.merkleRootSignature=b.sign(this))}}],[{key:"PADDING_INCREMENTS",get:function(){return 16}},{key:"padTree",value:function(b){for(var c=b.length,d=c<a.PADDING_INCREMENTS?a.PADDING_INCREMENTS:_.ceil(c/a.PADDING_INCREMENTS)*a.PADDING_INCREMENTS,e=_.clone(b),f=services.container.SecureRandom;e.length<d;)e.push(new Claim("cvc:Random:node",f.wordWith(16)));return e}},{key:"getAllAttestableValue",value:function(a){var b=[];return _.forEach(a,function(a){var c=a.getAttestableValues();b=_.concat(b,c)}),b}}]),a}();module.exports={CvcMerkleProof:CvcMerkleProof};